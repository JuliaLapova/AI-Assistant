CREATE EXTENSION pgcrypto;

CREATE TABLE "requests" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "timestamp" timestamp DEFAULT now(),
  "company_id" int NOT NULL,
  "user_id" varchar,
  "chat_id" varchar,
  "raw_text" text NOT NULL,
  "topic" text,
  "filter_id" int,
  "timestamp_filter" timestamp,
  "parent_resp_id" int,
  "status" varchar NOT NULL
);

CREATE TABLE "responses" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "timestamp" timestamp DEFAULT now(),
  "request_id" int NOT NULL,
  "raw_text" text,
  "sources" varchar[],
  "status" varchar NOT NULL
);

CREATE TABLE "feedbacks" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "respons_id" int NOT NULL,
  "user_id" varchar NOT NULL,
  "timestamp" timestamp DEFAULT now(),
  "estimation" int NOT NULL,
  "note" text
);

CREATE TABLE "filtering_rules" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "created_at" timestamp DEFAULT now(),
  "company_id" int NOT NULL,
  "created_user_id" varchar,
  "word" varchar NOT NULL,
  "description" text,
  "is_archive" bool DEFAULT false,
  "archive_at" timestamp,
  "archive_user_id" varchar
);

CREATE TABLE "companies" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar,
  "email" varchar,
  "telephone" varchar,
  "website" varchar,
  "description" text,
  "created_at" timestamp DEFAULT (now()),
  "is_disabled" boolean DEFAULT false
);

CREATE TABLE "api_keys" (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    company_id integer NOT NULL,
    key_id character varying DEFAULT concat('wor-', gen_random_uuid()),
    created_at timestamp DEFAULT now(),
    expired_at timestamp DEFAULT (now() + '30 days'::interval),
    usages_left integer DEFAULT 1000,
    is_disabled boolean DEFAULT false,
    key_type character varying DEFAULT 'general'::character varying
);

COMMENT ON COLUMN "api_keys"."key_type" IS '[general, topic, sources]';

ALTER TABLE "requests" ADD FOREIGN KEY ("company_id") REFERENCES "companies" ("id");

ALTER TABLE "requests" ADD FOREIGN KEY ("parent_resp_id") REFERENCES "responses" ("id");

ALTER TABLE "responses" ADD FOREIGN KEY ("request_id") REFERENCES "requests" ("id");

ALTER TABLE "feedbacks" ADD FOREIGN KEY ("respons_id") REFERENCES "responses" ("id");

ALTER TABLE "filtering_rules" ADD FOREIGN KEY ("company_id") REFERENCES "companies" ("id");

ALTER TABLE "api_keys" ADD FOREIGN KEY ("company_id") REFERENCES "companies" ("id");
